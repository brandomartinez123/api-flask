#cliente para uso da api
import requests , json ,csv
url='http://127.0.0.1:5000'
# uso para ler os archigos txt
def read(file):
    dict_file_name={'file':file}
    response_create = requests.get(f'{url}/read_txt', data=dict_file_name)
    return print(response_create.status_code)
# uso de post
def create(file):
    name_file={'file_NEWTXT':file}
    create_res=requests.post(f'{url}/create_txt', data=name_file)
    return print(create_res.status_code)
#uso do put
def edit(file,content):
    file_edit={'file':file,
              'content':content}
    edit_res=requests.put(f'{url}/edit_txt', data=file_edit)
    return print(edit_res.status_code)

def read_csv(file):
    #file_name_df=pd.read_csv('bancodatos_pd.csv')
    file_name_df={'file':file}
    response_create = requests.get(f'{url}/read_csv', data=file_name_df)
    return display(response_create.status_code)

def edit_csv(file):
    #file_name_df=pd.read_csv('bancodatos_pd.csv')
    edit_file_df={'nome':file}
    response_create = requests.put(f'{url}/edit_csv', data=edit_file_df)
    return display(response_create.status_code)
def create_csv(file):
    #file_name_df=pd.read_csv('bancodatos_pd.csv')
    create_file_df={'nome':file}
    response_create = requests.post(f'{url}/create_csv', data=create_file_df)
    return display(response_create.status_code)
def filtro_csv(file):
    create_file_df={'nome':file}
    response_create = requests.put(f'{url}/filtro_csv', data=create_file_df)
    return display(response_create.status_code)
#if __name__ == "__main__":
#	read("file")
